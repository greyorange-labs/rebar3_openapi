%%%-------------------------------------------------------------------
%%% @doc HTTP handler for bsh_http_handler
%%% Generated by rebar3_openapi
%%% @end
%%%-------------------------------------------------------------------
-module(bsh_http_handler).

-behaviour(cowboy_rest).

%% Cowboy REST callbacks
-export([
    init/2,
    allowed_methods/2,
    content_types_accepted/2,
    content_types_provided/2,
    handle_json_accepted/2,
    handle_json_provided/2
]).

%%%===================================================================
%%% Cowboy REST Callbacks
%%%===================================================================

init(Req, {OperationId, Method, LogicModule}) ->
    %% Store method in context during init
    Context = #{operation => OperationId, method => Method, logic_module => LogicModule},
    {cowboy_rest, Req, Context}.

allowed_methods(Req, #{method := Method} = Context) ->
    %% Return path-specific allowed methods from context
    {[Method], Req, Context}.

content_types_accepted(Req, Context) ->
    {[{{<<"application">>, <<"json">>, '*'}, handle_json_accepted}], Req, Context}.

content_types_provided(Req, Context) ->
    {[{{<<"application">>, <<"json">>, '*'}, handle_json_provided}], Req, Context}.

handle_json_accepted(Req, #{operation := OpId, logic_module := LogicModule} = Context) ->
    %% Delegate to logic handler
    case LogicModule:accept_callback(default, OpId, Req, Context) of
        {ok, StatusCode, Headers, Body, Req2, Context2} ->
            %% Build and send response
            Req3 = cowboy_req:reply(StatusCode, Headers, Body, Req2),
            {stop, Req3, Context2};
        {error, StatusCode, Headers, Body, Req2, Context2} ->
            %% Build and send error response
            Req3 = cowboy_req:reply(StatusCode, Headers, Body, Req2),
            {stop, Req3, Context2}
    end.

handle_json_provided(Req, #{operation := OpId, logic_module := LogicModule} = Context) ->
    %% Delegate to logic handler
    case LogicModule:provide_callback(default, OpId, Req, Context) of
        {ok, StatusCode, Headers, Body, Req2, Context2} ->
            %% Build and send response
            Req3 = cowboy_req:reply(StatusCode, Headers, Body, Req2),
            {stop, Req3, Context2};
        {error, StatusCode, Headers, Body, Req2, Context2} ->
            %% Build and send error response
            Req3 = cowboy_req:reply(StatusCode, Headers, Body, Req2),
            {stop, Req3, Context2}
    end.

%%%===================================================================
%%% Internal Functions
%%%===================================================================

